(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{568:function(e,n,t){"use strict";t.r(n);var r=t(569),o=t.n(r);for(var l in r)["default"].indexOf(l)<0&&function(e){t.d(n,e,(function(){return r[e]}))}(l);n.default=o.a},569:function(e,n){},590:function(e,n,t){"use strict";t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return o}));var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-container",[t("v-card",[t("v-card-title",{staticClass:"headline primary--text"},[e._v("L'asynchronisme avec les promesses")]),e._v(" "),t("v-card-text",[t("v-card-title",{staticClass:"subheading primary--text"},[e._v("Qu'est-ce qu'une promesse ?")]),e._v(" "),t("p",[e._v("\n            La promesse est une alternative aux callbacks. Plusieurs librairies fournissent une implémentation de la promesse.\n            Cependant, cette fonctionnalité est maintenant implémentée en ES6 : nous pouvons donc les utiliser sans avoir besoin d'une dépendance externe.\n          ")]),e._v(" "),t("p",[e._v("\n            Concrètement, les promesses sont matérialisées par une classe "),t("code",[e._v("Promise")]),e._v(" :\n            "),t("ul",[t("li",[e._v("\n                Le constructeur s'appelle de la manière suivante : "),t("code",[e._v("new Promise((resolve, reject) => { ... });")]),e._v(" avec\n                "),t("ul",[t("li",[t("code",[e._v("resolve()")]),e._v(" qui doit être appelé en cas de succès (accepte en paramètre le résultat du traitement)")]),e._v(" "),t("li",[t("code",[e._v("reject()")]),e._v(" qui doit être appelé en cas d'erreur (accepte en paramètre l'erreur)")])]),e._v("\n                Le code de la fonction passée en paramètre du constructeur est executé dès la création de la promesse.\n                "),t("br"),e._v("\n                Par exemple:\n                "),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t("code",{attrs:{language:"js"}},[e._v("\nimport { readFile } from 'fs';\nimport { join } from 'path';\nconst getFileContent = () => {\n  return new Promise((resolve, reject) => {\n    readFile(join(__dirname, 'package.json'), (err, res) {\n      if(err) {\n        reject(err);\n        return;\n      }\n      resolve(res);\n    });\n  });\n}")])]),t("br")]),e._v(" "),t("li",[e._v("\n                Les méthodes de la classe "),t("code",[e._v("Promise")]),e._v(" sont :\n                "),t("ul",[t("li",[t("code",[e._v("then()")]),e._v(" qui définit la fonction qui sera appelée lorsque la promesse sera résolue (i.e. : l'opération asynchrone s'est terminée avec succès) ;")]),e._v(" "),t("li",[t("code",[e._v("catch()")]),e._v(" qui définit la fonction qui sera appelée lorsque la promesse sera rejetée (i.e. : l'opération asynchrone s'est terminée avec une erreur).")])]),e._v("\n                Par exemple:\n                "),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t("code",{attrs:{language:"js"}},[e._v("\ngetFileContent().then((res) => {\n  console.log(res.statusCode);\n})\n.catch((err) => {\n  console.log(err);\n})")])])])])]),e._v(" "),t("v-card-title",{staticClass:"subheading primary--text"},[e._v("Exécuter plusieurs promesses en séries")]),e._v(" "),t("p",[e._v("\n            La méthode "),t("code",[e._v(".then()")]),e._v(" retourne une promesse qui :\n            "),t("ul",[t("li",[e._v("sera résolue avec la valeur retournée par la fonction en paramètre du "),t("code",[e._v("then")]),e._v(" (dans le cas où il ne s'agit pas d'une promesse)")]),e._v(" "),t("li",[e._v("sera rejetée avec l'erreur levée ("),t("code",[e._v("thrown")]),e._v(" par la fonction en paramètre du "),t("code",[e._v("then")])]),e._v(" "),t("li",[e._v("sera résolue ou rejetée de la même manière que la promesse retournée par la fonction en paramètre du "),t("code",[e._v("then")]),e._v(" (dans le cas où il s'agit d'une promesse)")])]),e._v("\n\n            Il est donc possible de chaîner les appels à "),t("code",[e._v(".then()")]),e._v(" et avoir un seul "),t("code",[e._v(".catch()")]),e._v(" :\n            "),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t("code",{attrs:{language:"js"}},[e._v("\ndoSomething().then((result) => {\n  // doSomethingElse retourne une valeur qui n'est pas une promesse\n  return doSomethingElse(result);\n})\n.then((newResult) => {\n  // doThirdThing retourne une promesse\n  return doThirdThing(newResult);\n})\n.then((finalResult) => {\n  console.log('Got the final result: ' + finalResult);\n})\n.catch(failureCallback);")])])]),e._v(" "),t("v-alert",{attrs:{outlined:"",value:!0,color:"info",icon:"info",outline:""}},[e._v("\n            C'est l'équivalent de la méthode "),t("code",[e._v("async.waterfall()")]),e._v(" qui est utilisée pour les callbacks.\n          ")]),e._v(" "),t("v-card-title",{staticClass:"subheading primary--text"},[e._v("Exécuter plusieurs promesses en parallèle")]),e._v(" "),t("p",[e._v("\n            La méthode "),t("code",[e._v("Promise.all()")]),e._v(" :\n            "),t("ul",[t("li",[e._v("accepte en paramètre un tableau de promesses ;")]),e._v(" "),t("li",[e._v("permet d'exécuter plusieurs promesses en parallèle ;")]),e._v(" "),t("li",[e._v("retourne une promesse, rejetée à la première erreur, ou résolue quand toutes les promesses en entrée sont résolues.")])])]),e._v(" "),t("v-alert",{attrs:{outlined:"",value:!0,color:"info",icon:"info",outline:""}},[e._v("\n            C'est l'équivalent de la méthode "),t("code",[e._v("async.parallel")]),e._v(" qui est utilisée pour les callbacks.\n          ")]),e._v(" "),t("v-card-title",{staticClass:"subheading primary--text"},[e._v("Autres fonctions utilitaires")]),e._v(" "),t("p",[e._v("\n            Le module "),t("code",[e._v("util")]),e._v(" propose :\n            "),t("ul",[t("li",[e._v("la fonction "),t("code",[e._v("promisify")]),e._v(' pour convertir une fonction "callback-style" en fonction "promise-style" ;')]),e._v(" "),t("li",[e._v("la fonction "),t("code",[e._v("callbackify")]),e._v(' pour convertir une fonction "promise-style" en fonction "callback-style".')])])])],1),e._v(" "),t("v-card-text",[t("v-card-title",{staticClass:"subheading secondary--text"},[e._v("TP Fil rouge")]),e._v(" "),t("p",[t("ol",[t("li",[e._v("\n                Dans le module "),t("code",[e._v("app/fs-utils.js")]),e._v(" :\n                "),t("ul",[t("li",[e._v("modifier la fonction "),t("code",[e._v("getDirContent()")]),e._v(" pour qu'elle retourne une promesse et n'utilise plus de callback ;")]),e._v(" "),t("li",[e._v("modifier la fonction "),t("code",[e._v("getDirStat()")]),e._v(" pour qu'elle retourne une promesse et n'utilise plus de callback.")])])]),e._v(" "),t("li",[e._v("\n                Modifier les tests en conséquence.\n                "),t("v-alert",{attrs:{outlined:"",value:!0,color:"info",icon:"info",outline:""}},[e._v("\n                  Mocha gère les promesses : "),t("a",{attrs:{href:"https://mochajs.org/#working-with-promises"}},[e._v("https://mochajs.org/#working-with-promises")]),e._v("."),t("br"),e._v("\n                  Pour Chai, il existe un plugin qui permet de faire des assertions sur les promesses : "),t("a",{attrs:{href:"https://www.chaijs.com/plugins/chai-as-promised/"}},[e._v("https://www.chaijs.com/plugins/chai-as-promised/")]),e._v(".\n                ")])],1)])])],1)],1)],1)},o=[]},597:function(e,n,t){"use strict";t.r(n);var r=t(590),o=t(568);for(var l in o)["default"].indexOf(l)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(l);var c=t(83),v=t(177),d=t.n(v),_=t(612),m=t(549),h=t(547),f=t(543),component=Object(c.a)(o.default,r.a,r.b,!1,null,null,null);n.default=component.exports,d()(component,{VAlert:_.a,VCard:m.a,VCardText:h.a,VCardTitle:h.b,VContainer:f.a})}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{558:function(e,n,t){"use strict";t.r(n);var r=t(559),o=t.n(r);for(var l in r)["default"].indexOf(l)<0&&function(e){t.d(n,e,(function(){return r[e]}))}(l);n.default=o.a},559:function(e,n){},585:function(e,n,t){"use strict";t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return o}));var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-container",[t("v-card",[t("v-card-title",{staticClass:"headline primary--text"},[e._v("Les mots clés async / await")]),e._v(" "),t("v-card-text",[t("p",[e._v("\n            Afin de faciliter l'écriture de code asynchrone, JavaScript permet maintenant d'utiliser 2 nouveaux mots clés "),t("code",[e._v("async")]),e._v(" et "),t("code",[e._v("await")]),e._v(".\n            Ils sont disponibles depuis ES2017 (Node.js 8).\n          ")]),e._v(" "),t("v-card-title",{staticClass:"subheading primary--text"},[e._v("async")]),e._v(" "),t("p",[t("code",[e._v("async")]),e._v(" est un nouveau mot-clé qui se place avec la déclaration d'une fonction.\n            La fonction retournera alors une promesse :\n            "),t("ul",[t("li",[e._v("qui sera rejetée à la première erreur levée ("),t("code",[e._v("throw")]),e._v(") ;")]),e._v(" "),t("li",[e._v("qui sera résolue avec la valeur retournée par la fonction s'il n'y a pas d'erreur.")])])]),e._v(" "),t("p",[e._v("\n            Ainsi, les 2 fonctions suivantes sont équivalentes :\n            "),t("ul",[t("li",[e._v("\n                avec "),t("code",[e._v("async")]),e._v(" :\n                "),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t("code",{attrs:{language:"js"}},[e._v("\nconst doHello = async (name) => {\n  if(! name) {\n    throw 'name is missing';\n  }\n  return `Hello ${name}`\n};")])])]),e._v(" "),t("li",[e._v("\n                avec une promesse :\n                "),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t("code",{attrs:{language:"js"}},[e._v("\nconst doHello = (name) => {\n  return new Promise((resolve, reject) => {\n    if(! name) {\n      reject('name is missing');\n      return;\n    }\n    resolve(`Hello ${name}`);\n  });\n};")])])])])]),e._v(" "),t("v-card-title",{staticClass:"subheading primary--text"},[e._v("await")]),e._v(" "),t("p",[t("code",[e._v("await")]),e._v(" est un nouveau mot-clé qui se place avant une promesse :\n            "),t("ul",[t("li",[e._v("si la promesse est résolue, son résultat est retourné (on peut alors l'affecter à une variable) ;")]),e._v(" "),t("li",[e._v("si la promesse est rejetée, une erreur est levée ("),t("code",[e._v("throw")]),e._v(").")])]),e._v("\n            A noter : le mot-clé "),t("code",[e._v("await")]),e._v(" ne peut-être utilisé que dans une fonction "),t("code",[e._v("async")]),e._v(".\n          ")]),e._v(" "),t("p",[e._v("\n            Exemple :\n            "),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t("code",{attrs:{language:"js"}},[e._v("\nconst doHelloTwice = async () => {\n  const hello1 = await doHello('bob');\n  const hello2 = await doHello('alice');\n  return `${hello1}, ${hello2}`;\n};")])])]),e._v(" "),t("v-alert",{attrs:{outlined:"",value:!0,color:"info",icon:"info",outline:""}},[e._v("\n            Ces deux nouveaux mot-clés n'ajoutent pas de fonctionnalités par rapport aux promesses, mais permettent avant tout de simplifer le code.\n            En effet :\n            "),t("ul",[t("li",[e._v("la syntaxe est simplifiée (pas besoin d'utiliser "),t("code",[e._v(".then")]),e._v(" et "),t("code",[e._v(".catch")]),e._v(") ;")]),e._v(" "),t("li",[e._v("les lignes de code s'exécutent dans l'ordre dans lequel elles sont écrites (comme du code synchrone, mais sans bloquer le thread) ;")]),e._v(" "),t("li",[e._v("les erreurs synchrones et asynchrones sont gérées de la même façon, en utilisant "),t("code",[e._v("throw")]),e._v(" pour relever une erreur et "),t("code",[e._v("try/catch")]),e._v(" pour les récupérer.")])])])],1),e._v(" "),t("v-card-text",[t("v-card-title",{staticClass:"subheading secondary--text"},[e._v("TP Fil rouge")]),e._v(" "),t("p",[t("ol",[t("li",[e._v("\n                Dans le module "),t("code",[e._v("app/fs-utils.js")]),e._v(", modifier les fonctions "),t("code",[e._v("getDirContent()")]),e._v(" et "),t("code",[e._v("getDirStat()")]),e._v("\n                pour utiliser "),t("code",[e._v("async")]),e._v(" et "),t("code",[e._v("await")]),e._v(" (et donc ne plus utiliser "),t("code",[e._v("new Promise()")]),e._v(", "),t("code",[e._v(".then()")]),e._v("...)\n              ")]),e._v(" "),t("li",[e._v("\n                Modifier les tests pour utiliser "),t("code",[e._v("async")]),e._v(" et "),t("code",[e._v("await")]),e._v(".\n              ")])])])],1)],1)],1)},o=[]},592:function(e,n,t){"use strict";t.r(n);var r=t(585),o=t(558);for(var l in o)["default"].indexOf(l)<0&&function(e){t.d(n,e,(function(){return o[e]}))}(l);var v=t(83),c=t(177),d=t.n(c),_=t(612),m=t(549),f=t(547),h=t(543),component=Object(v.a)(o.default,r.a,r.b,!1,null,null,null);n.default=component.exports,d()(component,{VAlert:_.a,VCard:m.a,VCardText:f.a,VCardTitle:f.b,VContainer:h.a})}}]);
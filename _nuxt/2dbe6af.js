(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{564:function(e,t,n){"use strict";n.r(t);var r=n(565),o=n.n(r);for(var l in r)["default"].indexOf(l)<0&&function(e){n.d(t,e,(function(){return r[e]}))}(l);t.default=o.a},565:function(e,t){},588:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o}));var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-container",[n("v-card",[n("v-card-title",{staticClass:"headline primary--text"},[e._v("Logging")]),e._v(" "),n("v-card-text",[n("v-card-title",{staticClass:"subheading primary--text"},[e._v("Logguer avec winston")]),e._v(" "),n("p",[e._v("\n            Node.js ne fournit pas de module pour logguer, nous allons donc utiliser la librairie "),n("a",{attrs:{href:"https://www.npmjs.com/package/winston"}},[e._v("winston")]),e._v(" pour logguer.\n            Winston est personnalisable, et repose sur deux concepts :\n            "),n("ul",[n("li",[e._v("le "),n("a",{attrs:{href:"https://www.npmjs.com/package/winston#formats"}},[e._v("format")]),e._v(" qui correspond aux différentes étapes qui vont permettre de générer le log (par exemple, appliquer la "),n("a",{attrs:{href:"https://www.npmjs.com/package/winston#string-interpolation"}},[e._v("string interpolation")]),e._v(" et générer le log en json)")]),e._v(" "),n("li",[e._v("le "),n("a",{attrs:{href:"https://www.npmjs.com/package/winston#transports"}},[e._v("transport")]),e._v(" qui correspond aux sorties de log (console, fichier...)")])])]),e._v(" "),n("p",[e._v("\n            Pour créer un logger, il faut utiliser la méthode "),n("code",[e._v("createLogger()")]),e._v(" comme dans l'exemple ci-dessous :\n            "),n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[n("code",{attrs:{language:"js"}},[e._v("\nimport winston from 'winston';\nconst { createLogger, format, transports } = winston;\nconst { combine, splat, json } = format;\n\nconst logger = createLogger({\n    format: combine(splat(), json()),\n    transports: [new transports.Console()]\n});\n\nlogger.info('Hello %s !', 'World');")])])]),e._v(" "),n("p",[e._v("\n            Ce code génère le log suivant en console :\n            "),n("code",[e._v('{"level":"info","message":"Hello World !"}')])]),e._v(" "),n("v-alert",{attrs:{outlined:"",value:!0,color:"info",icon:"info",outline:""}},[e._v("\n            La méthodologie "),n("a",{attrs:{href:"https://12factor.net/fr/logs"}},[e._v("twelve-factor")]),e._v(" recommande de logguer sur la sortie standard.\n          ")])],1),e._v(" "),n("v-card-text",[n("v-card-title",{staticClass:"subheading secondary--text"},[e._v("TP Fil rouge")]),e._v(" "),n("p",[e._v("\n            Mettre en place des logs en console sur le projet :\n            "),n("ol",[n("li",[e._v("logguer en "),n("code",[e._v("DEBUG")]),e._v(" les paramètres d'entrées des fonctions présentes dans le fichier "),n("code",[e._v("app/fs-utils")]),e._v(" ;")]),e._v(" "),n("li",[e._v("afin de gérer tous les logs avec la même librairie, utiliser "),n("a",{attrs:{href:"https://www.npmjs.com/package/express-winston"}},[e._v("express-winston")]),e._v(" pour générer les logs access.")])])])],1)],1)],1)},o=[]},595:function(e,t,n){"use strict";n.r(t);var r=n(588),o=n(564);for(var l in o)["default"].indexOf(l)<0&&function(e){n.d(t,e,(function(){return o[e]}))}(l);var c=n(83),v=n(177),d=n.n(v),f=n(612),_=n(549),m=n(547),w=n(543),component=Object(c.a)(o.default,r.a,r.b,!1,null,null,null);t.default=component.exports,d()(component,{VAlert:f.a,VCard:_.a,VCardText:m.a,VCardTitle:m.b,VContainer:w.a})}}]);